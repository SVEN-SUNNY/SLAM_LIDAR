import rclpy
from rclpy.node import Node
from std_msgs.msg import String
import pigpio
from nrf24 import NRF24
import time

class LoRaReceiver(Node):
    def __init__(self):
        super().__init__('lora_receiver')
        self.publisher_ = self.create_publisher(String, 'nrf_data', 10)
        self.pi = pigpio.pi()
        if not self.pi.connected:
            self.get_logger().error("Could not connect to pigpio daemon!")
            exit()
        self.radio = NRF24(self.pi, ce=25, csn=8)
        self.radio.set_channel(76)
        self.radio.set_payload_size(32)
        self.radio.set_address_width(5)
        self.radio.set_data_rate(NRF24.BR_1MBPS)
        self.radio.set_crc_length(NRF24.CRC_16)
        self.radio.open_reading_pipe(1, b"00001")
        self.radio.start_listening()
        self.get_logger().info("nRF24L01+ Receiver Initialized")
        self.timer = self.create_timer(0.1, self.receive_data)

    def receive_data(self):
        while self.radio.any():
            received = self.radio.read()
            message = bytes(received).decode('utf-8').strip('\x00')
            self.get_logger().info(f"Received: {message}")
            msg = String()
            msg.data = message
            self.publisher_.publish(msg)

def main(args=None):
    rclpy.init(args=args)
    lora_receiver = LoRaReceiver()
    rclpy.spin(lora_receiver)
    lora_receiver.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
